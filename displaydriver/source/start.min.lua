PlayerContainerProficiency=30;PlayerContainerOptimization=0;LowLevel=25;MediumLevel=50;searchStringOre=" Ore"searchStringPure="Pure "densities={Bauxite=1.281,Coal=1.35,Quartz=2.65,Hematite=5.04,Chromite=4.54,Malachite=4.00,Limestone=2.71,Natron=1.55,Petalite=2.41,Garnierite=2.6,Acanthite=7.2,Pyrite=5.01,Cobaltite=6.33,Cryolite=2.95,Kolbeckite=2.37,GoldNuggets=19.3,Rhodonite=3.76,Columbite=5.38,Illmenite=4.55,Vanadinite=6.95,Oxygen=1.00,Hydrogen=0.07,Aluminium=2.7,Carbon=2.27,Silicon=2.33,Iron=7.85,Calcium=1.55,Chromium=7.19,Copper=8.96,Sodium=0.97,Lithium=0.53,Nickel=8.91,Silver=10.49,Sulfur=1.82,Cobalt=8.9,Fluorine=1.7,Gold=19.3,Scandium=2.98,Manganese=7.21,Niobium=8.57,Titanium=4.51,Vanadium=6.00}function slotValid(a)return a and type(a)=="table"and type(a.export)=="table"and a.getElementClass end;local b={}local c={}function onStart()if display1 then b[1]=display1 end;if display2 then b[2]=display2 end;if display3 then b[3]=display3 end;if display4 then b[4]=display4 end;local d=1;for e,a in pairs(unit)do if slotValid(a)then if a.setHTML then a.activate()elseif not databank and a.getStringValue then databank=a elseif not core and a.getConstructId then core=a end end end;if not core then return end;function addContainer(f)if not string.match(core.getElementTypeById(f):lower(),"container")then return end;local g=core.getElementNameById(f)if not g then return end;local h=nil;if string.match(g,searchStringOre)then h=string.gsub(g,searchStringOre,"")elseif string.match(g,searchStringPure)then h=string.gsub(g,searchStringPure,"")else return end;if not h or h==""then return end;local i=densities[h]if not i then return end;local j=core.getElementMaxHitPointsById(f)local k=0.0;local l=0.0;if j>49 and j<=123 then else if j>123 and j<=998 then k=229.09;containerVolume=1000.0 elseif j>998 and j<=7996 then k=1280.0;containerVolume=8000.0 elseif j>7996 and j<=17315 then k=7420.0;containerVolume=64000.0 elseif j>17315 then k=14840.0;containerVolume=128000.0 end;l=containerVolume*(1.0+PlayerContainerProficiency/100)end;c[f]={name=g,id=f,substance=h,capacity=l,selfMass=k,density=i}end;local elementsIds=core.getElementIdList()for m,f in ipairs(elementsIds)do addContainer(f)end end;local n={"XS"," S"," M"," L","XL"}function assemblySize(f)local o=core.getElementMassById(f)local p=math.floor(math.log(o-90,10)+0.1)return p,n[p]end;tolColours={blue="#332288",cyan="#66CCEE",green="#228833",yellow="#CCBB44",red="#EE6677",purple="#AA3377",grey="#BBBBBB"}local q="darkslategray"local r=tolColours.green;local s=tolColours.cyan;local t=tolColours.yellow;local u=tolColours.red;local v=[[Monaco, monospace]]local w={h1=[[<head><style> .bar { text-align: left; vertical-align: top; border-radius: 0 0em 0em 0; } </style></head>]],d1=[[<div class="bootstrap" style="text-align:left; vertical-align: text-bottom;
    display: flex; flex-direction: column; justify-content: flex-end; align-items: flex-end; margin: auto;">]],de=[[</div>]],t1=[[<table style="text-transform: capitalize;Font-Family: ]]..v..[[;  font-size: 4em; table-layout: auto; width: 100vw;">]],t2=[[<table style="text-transform: capitalize;Font-Family: ]]..v..[[;  font-size: 2.6em; table-layout: auto; width: 100vw;">]],te=[[</table>]],r1=[[<tr style="width:100vw; background-color: ]]..q..[[; color: white;">]],r2=[[<tr>]],re=[[</tr>]],thL=[[<th style="text-align:left;">]],thR=[[<th style="text-align:right;">]],th3=[[ <th style="background-color: ]]..q..[[;">&nbsp;</th>]],th4=[[<th colspan=9>&nbsp;</th>]],the=[[</th>]]}function refreshOreScreens(x,y,z)local A={}function processSubstanceContainer(B)local C=(core.getElementMassById(B.id)-B.selfMass)*(1.0+PlayerContainerOptimization/100)local D=C/B.density;if D>B.capacity then system.print(B.name.." ["..B.id.."] : "..D.." "..B.capacity)system.print("Substance : "..B.substance)system.print("SelfMass : "..B.selfMass)system.print("Content mass : "..C)system.print("Density : "..B.density)end;if A[B.substance]then A[B.substance].volume=A[B.substance].volume+D;A[B.substance].capacity=A[B.substance].capacity+B.capacity else A[B.substance]={name=B.substance,volume=D,capacity=B.capacity}end end;for m,B in pairs(c)do processSubstanceContainer(B)end;function BarGraph(E,F)if not F then F=1 end;if E<=0 then barcolour=u elseif E>0 and E<=LowLevel then barcolour=u elseif E>LowLevel and E<=MediumLevel then barcolour=t elseif E>MediumLevel then barcolour=r else barcolour=r end;return[[<td class="bar" valign=top colspan="]]..F..[[">
        <svg>
            <rect x="0" y="1" rx="4" ry="4" height="2.5vw" width="17.2vw" stroke="white" stroke-width="1" rx="0" />
            <rect x="1" y="2" rx="3" ry="3" height="2.4vw" width="]]..17*E/100 ..[[vw" fill="]]..barcolour..[[" opacity="1.0" rx="0" />
            <text x="1" y="23" fill="white" text-align="left" margin-left="3" font-family="]]..v..[[">]]..string.format("%02.1f",E)..[[%</text>
        </svg>
        </td>]]end;function displayFormat(f)if not A[f]then return"?",0,"kℓ"end;local D=A[f].volume;local E=math.min(100.0*D/A[f].capacity,100.0)if D>=1000000 then return string.format("%02.1f",D/1000000),E,"Mℓ"end;return string.format("%02.1f",D/1000),E,"kℓ"end;function AddHTMLRow(G,H)local I,J,K=displayFormat(G)local L,M,N=displayFormat(H)resHTML=w.r2 ..w.thL..G..w.the..w.thR..I..K.."&nbsp;"..w.the..BarGraph(J).."<th style=\"background-color: "..q.."\">"..w.the..w.thR..H..w.the..w.thR..L..N.."&nbsp;"..w.the..BarGraph(M)..w.re;return resHTML end;local O=[[<th style="width:17vw; text-align:left;">]]local P=[[<th style="width:14vw; text-align:left;">Vol.</th>
                  <th style="width:17vw; text-align:left;">Levels</th>]]function AddHTMLHeader(Q,R)return w.r1 ..O..Q..w.the..P..[[<th style="width:2vw"/>]]..O..R..w.the..P end;if x then local S=w.h1 ..w.d1 ..w.t2;S=S..AddHTMLHeader("T3 Ores","T3 Pures")S=S..AddHTMLRow("Petalite","Lithium")S=S..AddHTMLRow("Garnierite","Nickel")S=S..AddHTMLRow("Pyrite","Sulfur")S=S..AddHTMLRow("Acanthite","Silver")S=S..AddHTMLHeader("T2 Ores","T2 Pures")S=S..AddHTMLRow("Natron","Sodium")S=S..AddHTMLRow("Malachite","Copper")S=S..AddHTMLRow("Limestone","Calcium")S=S..AddHTMLRow("Chromite","Chromium")S=S..AddHTMLHeader("T1 Ores","T1 Pures")S=S..AddHTMLRow("Bauxite","Aluminium")S=S..AddHTMLRow("Coal","Carbon")S=S..AddHTMLRow("Hematite","Iron")S=S..AddHTMLRow("Quartz","Silicon")S=S..AddHTMLHeader("H₂","O₂")S=S..AddHTMLRow("Hydrogen","Oxygen")S=S..w.r1 ..w.th4 ..w.re;S=S..w.te..w.de;x.setHTML(S)end;if y then local S=w.h1 ..w.d1 ..w.t2;S=S..AddHTMLHeader("T5 Ores","T5 Pures")S=S..AddHTMLRow("Rhodonite","Manganese")S=S..AddHTMLRow("Columbite","Niobium")S=S..AddHTMLRow("Illmenite","Titanium")S=S..AddHTMLRow("Vanadinite","Vanadium")S=S..AddHTMLHeader("T4 Ores","T4 Pures")S=S..AddHTMLRow("Cobaltite","Cobalt")S=S..AddHTMLRow("Cryolite","Fluorine")S=S..AddHTMLRow("GoldNuggets","Gold")S=S..AddHTMLRow("Kolbeckite","Scandium")S=S..w.r1 ..w.th4 ..w.re;S=S..w.te..w.de;y.setHTML(S)end end;dataUpdates={}assemblies={}alerts={}function refreshIndustryScreens(x,y,z)function AddHTMLRow(Q,R,T,U,V)resHTML=[[<tr style="color: ]]..U..[[; font-size: ]]..V..[[em;">>
                ]]..w.thL..[[&nbsp;</th>
                ]]..w.thL..Q..[[</th>
                ]]..w.thR..R..[[&nbsp;</th>
                ]]..w.thL..T..[[</th>
            </tr>]]return resHTML end;function processData(W)if W=="updated"then return end;local X=databank.getStringValue(W)if not X then return end;local Y=json.decode(X)if not Y or type(Y)~="table"or not Y.status or not z and Y.updated~=1 then return end;if not z then system.print(W.." status="..Y.status)end;local g=core.getElementNameById(W)local Z=core.getElementTypeById(W)if Z=="assembly line"then local p,V=assemblySize(W)assemblies[p*10000+W]={name=g,size=V,id=W,status=Y.status}else local _=Z.."_"..g.."_"..W;if Y.status:find("JAMMED")==1 then alerts[_]={name=g,machine=Z,id=W,status=Y.status}else alerts[_]=nil end end;if Y.updated==1 then Y.updated=0;dataUpdates[W]=Y end end;local a0=json.decode(databank.getKeys())for m,W in ipairs(a0)do processData(W)end;local a1={}for a2 in pairs(assemblies)do table.insert(a1,a2)end;table.sort(a1)if x then local S=w.h1 ..w.d1 ..w.t1;S=S..w.r1 ..w.thL.."&nbsp;"..w.the..w.thL.."Assembly Lines"..w.the..w.thR.."#&nbsp;"..w.the..w.thL.."Status"..w.the..w.re;for m,a2 in ipairs(a1)do local a3=assemblies[a2]local U=u;local a4=a3.status;if a4=="JAMMED_MISSING_INGREDIENT"then U=t;a4="WAITING"elseif a4=="RUNNING"then U=r elseif a4=="STOPPED"then U=s elseif a4:find("JAMMED")==1 then U=u end;S=S..AddHTMLRow(a3.size,""..a3.id,a4,U,"1")end;S=S..w.te..w.de;x.setHTML(S)end;local a5={}for a2 in pairs(alerts)do table.insert(a5,a2)end;table.sort(a5)if y then local S=w.h1 ..w.d1 ..w.t1;S=S..w.r1 ..w.thL.."&nbsp;"..w.the..w.thL.."Machine"..w.the..w.thR.."#&nbsp;"..w.the..w.thL.."Alert"..w.the..w.re;for m,a2 in ipairs(a5)do local a6=alerts[a2]local U=u;local a4=a6.status;if a4=="JAMMED_MISSING_INGREDIENT"then U=t;a4="WAITING"elseif a4:find("JAMMED")==1 then U=u end;S=S..AddHTMLRow(a6.machine.." - "..a6.name,""..a6.id,a4,U,"0.5")end;S=S..w.te..w.de;y.setHTML(S)end end;function queryAllElements()elementsIds=core.getElementIdList()for m,f in ipairs(elementsIds)do system.print(f.." : "..core.getElementTypeById(f).." name="..core.getElementNameById(f))end end;function refreshScreens(z)refreshOreScreens(b[3],b[4],z)refreshIndustryScreens(b[1],b[2],z)end;function processFirst()system.print("Tick First")refreshScreens(true)unit.stopTimer("First")end;function processDataUpdates()if not databank then return end;local a7=11;for W,Y in pairs(dataUpdates)do a7=a7-1;if a7==0 then return end;system.print("Writing data for "..W)databank.setStringValue(W,json.encode(Y))dataUpdates[W]=nil end;if next(dataUpdates)==nil then databank.setIntValue("updated",0)end end;function processTick()local a8,a9=xpcall(function()refreshScreens(false)end,traceback)if not a8 then system.print(a9)end end;function onStop()for m,a in pairs(unit)do if slotValid(a)then if a.setHTML then a.clear()end end end end;system.print("InDUstry Status")local databank=nil;onStart()unit.setTimer("First",1)unit.setTimer("Live",7)unit.setTimer("WriteData",3)