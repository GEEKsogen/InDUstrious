{"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"onStatusChanged(slot1)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"0"},"key":12},{"code":"onStatusChanged(slot2)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"1"},"key":11},{"code":"onStatusChanged(slot3)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"2"},"key":10},{"code":"onStatusChanged(slot4)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"3"},"key":9},{"code":"onStatusChanged(slot5)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"4"},"key":8},{"code":"onStatusChanged(slot6)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"5"},"key":7},{"code":"onStatusChanged(slot7)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"6"},"key":6},{"code":"onStatusChanged(slot8)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"7"},"key":5},{"code":"onStatusChanged(slot9)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"8"},"key":4},{"code":"onStatusChanged(slot10)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"9"},"key":3},{"code":"\nfunction slotValid(slot)\nreturn slot \nand type(slot)==\"table\"\nand type(slot.export)==\"table\"\nand slot.getElementClass\nend\nfunction onStatusChanged(slot)\nsystem.print(slot.getId()..\" status=> \"..slot.getStatus())\nstoreStatus(slot)\nend\nfunction storeStatus(slot)\nif not slotValid(slot) or not slot.getStatus then return end\nlocal elementId=slot.getId();\nif elementId==nil then return end\\nlocal info={\nid=elementId,\nstatus=slot.getStatus(),\ncyclesCount=slot.getCycleCountSinceStartup(),\nefficiency=slot.getEfficiency(),\nuptime=slot.getUptime(),\nsource=self.getId(),\nupdated=1\n}\ndatabank.setStringValue(tostring(elementId), json.encode(info))\nend\nfunction searchForDataSlot()\nfor _, slot in pairs(unit) do \nif slotValid(slot) then\nif slot.getElementClass():lower()=='databankunit' then\ndatabank=slot\nreturn\nend\nend\nend\nend\nfunction queryAllSlots()\nfor _, slot in pairs(unit) do\nstoreStatus(slot)\nend\nend\nsystem.print(\"Board [\"..self.getId()..\"] ON!\")\nunit.hide()\ndatabank=nil\nsearchForDataSlot()\nif not databank then\nsystem.print(\"Databank not connected!\")\nself.exit()\nreturn\nend\nqueryAllSlots()","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":1},{"code":"system.print(\"Board [\"..self.getId()..\"] OFF!)\"","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":2}],"methods":[],"events":[]}