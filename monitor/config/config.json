{"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"onStatusChanged(slot1)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"0"},"key":"0"},{"code":"onStatusChanged(slot2)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"1"},"key":"1"},{"code":"onStatusChanged(slot3)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"2"},"key":"2"},{"code":"onStatusChanged(slot4)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"3"},"key":"3"},{"code":"onStatusChanged(slot5)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"4"},"key":"4"},{"code":"onStatusChanged(slot6)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"5"},"key":"5"},{"code":"onStatusChanged(slot7)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"6"},"key":"6"},{"code":"onStatusChanged(slot8)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"7"},"key":"7"},{"code":"onStatusChanged(slot9)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"8"},"key":"8"},{"code":"onStatusChanged(slot10)","filter":{"args":[{"variable":"*"}],"signature":"statusChanged(status)","slotKey":"9"},"key":"9"},{"code":"\nfunction slotValid(slot)\n    return slot \n    and type(slot) == \"table\"\n    and type(slot.export) == \"table\"\n    and slot.getElementClass\nend\n\nfunction onStatusChanged(slot)\n    system.print(slot.getId()..\" status=> \"..slot.getStatus())\n    storeStatus(slot)\nend\n\nfunction storeStatus(slot)\n    if not slotValid(slot) or not slot.getStatus then return end\n    \n    local elementId = slot.getId();\n    if elementId == nil then return end\n    --system.print(\"ElementId:\"..elementId)\n    \n    local info = {\n       id = elementId,\n       status = slot.getStatus(),\n       cyclesCount = slot.getCycleCountSinceStartup(),\n       efficiency = slot.getEfficiency(),\n       uptime = slot.getUptime(),\n       source = self.getId(),\n       updated = 1\n    }\n    databank.setStringValue(tostring(elementId), json.encode(info))\nend\n\n\nfunction searchForDataSlot()\n    for _, slot in pairs(unit) do        \n        if slotValid(slot)  then\n            if slot.getElementClass():lower() == 'databankunit' then\n                databank = slot\n                return\n            end\n        end\n    end\nend\n\nfunction queryAllSlots()\n    for _, slot in pairs(unit) do\n        storeStatus(slot)\n    end\nend\n\nfunction onStop()\n    system.print(\"Board [\"..self.getId()..\"] OFF\")\nend\n\nsystem.print(\"Board [\"..self.getId()..\"] ON\")\nunit.hide()\n\ndatabank = nil\nsearchForDataSlot()\nif not databank then\n    system.print(\"Databank not connected!\")\n    self.exit()\n    return\nend\n\nqueryAllSlots()","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"10"},{"code":"onStop()","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"11"}],"methods":[],"events":[]}